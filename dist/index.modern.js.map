{"version":3,"file":"index.modern.js","sources":["../src/io/Loader.ts","../src/compression/DataType.ts","../src/reducer/Reducer.ts","../node_modules/stream-data-view/dist/index.js","../src/compression/TokenEncoder.ts","../node_modules/fflate/esm/browser.js","../src/compression/FFlateEncoder.ts","../src/tokenizer/Token.ts","../node_modules/blueimp-md5/js/md5.js","../src/tokenizer/Tokenizer.ts","../src/expander/Extractor.ts","../src/compression/Compressor.ts","../src/index.tsx"],"sourcesContent":["const yaml = require('js-yaml');\n\nfunction extension(file: string) {\n    return file.split(\".\").pop();\n}\n\nexport default class Loader {\n    async load(file: string): Promise<any> {\n        const response = await fetch(file);\n        if (extension(file) === \"yaml\" || extension(file) === \"yml\") {\n            return yaml.load(await response.text());\n        }\n        return extension(file) === \"json\" ? await response.json() : await response.text();\n    }    \n}","import Token, { StoredToken, Type } from \"../tokenizer/Token\";\n\nexport enum StructureType {\n    LEAF = 0,\n    ARRAY = 1,\n    OBJECT = 2,\n    SPLIT = 3,\n};\n\nexport enum DataType {\n    UNDEFINED = 0,\n    NULL = 1,\n    BOOLEAN_FALSE = 2,\n    BOOLEAN_TRUE = 3,\n    INT8 = 4,\n    UINT8 = 5,\n    INT16 = 6,\n    UINT16 = 7,\n    INT32 = 8,\n    UINT32 = 9,\n    FLOAT32 = 10,\n    FLOAT64 = 11,\n    STRING = 12,\n    UNICODE = 13,\n    OBJECT_8 = 17,\n    OBJECT_16 = 18,\n    OBJECT_32 = 19,\n    SPLIT_8 = 20,\n    SPLIT_16 = 21,\n    SPLIT_32 = 22,\n    ARRAY_8 = 23,\n    ARRAY_16 = 24,\n    ARRAY_32 = 25,\n    OFFSET_ARRAY_8 = 26,\n    OFFSET_ARRAY_16 = 27,\n    OFFSET_ARRAY_32 = 28,\n    EMPTY_ARRAY = 29,\n    REFERENCE_8 = 30,\n    REFERENCE_16 = 31,\n    REFERENCE_32 = 32,\n    COMPLEX_OBJECT = 33,\n    UINT2 = 34,\n    UINT4 = 35,\n}\n\nexport const NUMBER_DATA_TYPES = [\n    DataType.UINT8,\n    DataType.INT8,\n    DataType.UINT16,\n    DataType.INT16,\n    DataType.UINT32,\n    DataType.INT32,\n    DataType.FLOAT32,\n    DataType.FLOAT64,\n];\n\nexport class DataTypeUtils {\n    numberSatisfyDataType(value: number, dataType: DataType): boolean {\n        const hasDecimal = value % 1 !== 0;\n        if (hasDecimal) {\n            switch(dataType) {\n                case DataType.FLOAT32:\n                    return Math.fround(value) === value;\n                case DataType.FLOAT64:\n                    return true;\n                default:\n                    return false;\n            }\n        }\n        switch (dataType) {\n            case DataType.UINT8:\n                return value >= 0 && value <= 255;\n            case DataType.INT8:\n                return value >= -128 && value <= 127;\n            case DataType.UINT16:\n                return value >= 0 && value <= 65535;\n            case DataType.INT16:\n                return value >= -32768 && value <= 32767;\n            case DataType.UINT32:\n                return value >= 0;\n            case DataType.INT32:\n                return true;\n        }\n        return false;\n    }\n\n    getBestType(array: number[]): DataType {\n        if (array.some(number => number % 1 !== 0)) {\n            //  decimal\n            if (array.every(number => this.numberSatisfyDataType(number, DataType.FLOAT32))) {\n                return DataType.FLOAT32;\n            }\n            return DataType.FLOAT64;\n        }\n\n        const min = Math.min(...array);\n        const max = Math.max(...array);\n\n        for (let dataType of NUMBER_DATA_TYPES) {\n            if (this.numberSatisfyDataType(min, dataType) && this.numberSatisfyDataType(max, dataType)) {\n                return dataType;\n            }\n        }\n        return DataType.FLOAT64;\n    }\n\n\n    getNumberDataType(value: number): DataType {\n        for (let type of NUMBER_DATA_TYPES) {\n            if (this.numberSatisfyDataType(value, type)) {\n                return type;\n            }\n        }\n        return DataType.UNDEFINED;\n    }\n\n    getStringDataType(value: string): DataType {\n        const letterCodes = value.split(\"\").map(l => l.charCodeAt(0));\n\n        if (letterCodes.every(code => code <= 255)) {\n            return DataType.STRING;\n        } else {\n            return DataType.UNICODE;\n        }    \n    }\n\n    getFullTokenDataType(token: Token): DataType {\n        switch (token.type) {\n            case \"array\":\n                return DataType.ARRAY_8;\n            case \"object\":\n                return DataType.OBJECT_8;\n            case \"split\":\n                return DataType.SPLIT_8;\n            default:\n                return this.getDataType(token);\n        }\n    }\n\n    getDataType(token: StoredToken): DataType {\n        switch (token.type) {\n            case \"complex\":\n                return DataType.COMPLEX_OBJECT;\n            case \"array\":\n            case \"object\":\n            case \"split\":\n                let indices: number[] = token.value;\n                if (!indices.length) {\n                    console.assert(token.type === \"array\");\n                    return DataType.EMPTY_ARRAY;\n                }\n                let offset = 0;\n                if (token.type === \"array\" && indices.length > 3) {\n                    const min = Math.min(...indices);\n                    const max = Math.max(...indices);\n                    if (this.getNumberDataType(max - min) !== this.getNumberDataType(max)) {\n                        offset = min;\n                    }\n                    indices = indices.map(value => value - offset);\n                }\n                const bestType: DataType = this.getBestType(indices);\n                switch (token.type) {\n                    case \"object\":\n                        return bestType === DataType.UINT8\n                            ? DataType.OBJECT_8\n                            : bestType === DataType.UINT16\n                            ? DataType.OBJECT_16\n                            : DataType.OBJECT_32;\n                    case \"split\":\n                        return bestType === DataType.UINT8\n                            ? DataType.SPLIT_8\n                            : bestType === DataType.UINT16\n                            ? DataType.SPLIT_16\n                            : DataType.SPLIT_32;\n                    case \"array\":\n                        if (offset) {\n                            return bestType === DataType.UINT8\n                                ? DataType.OFFSET_ARRAY_8\n                                : bestType === DataType.UINT16\n                                ? DataType.OFFSET_ARRAY_16\n                                : DataType.OFFSET_ARRAY_32;\n                        } else {\n                            return bestType === DataType.UINT8\n                                ? DataType.ARRAY_8\n                                : bestType === DataType.UINT16\n                                ? DataType.ARRAY_16\n                                : DataType.ARRAY_32;\n                        }\n                }\n            case \"leaf\":\n                if (token.value === undefined) {\n                    return DataType.UNDEFINED;\n                } else if (token.value === null) {\n                    return DataType.NULL;\n                } else {\n                    switch (typeof token.value) {\n                        case \"boolean\":\n                            return token.value ? DataType.BOOLEAN_TRUE : DataType.BOOLEAN_FALSE;\n                        case \"string\":\n                            return this.getStringDataType(token.value);\n                        case \"number\":\n                            return this.getNumberDataType(token.value);\n                    }    \n                }\n                break;\n            case \"reference\":\n                switch(this.getNumberDataType(token.value)) {\n                    case DataType.UINT8:\n                        return DataType.REFERENCE_8;\n                    case DataType.UINT16:\n                        return DataType.REFERENCE_16;\n                    case DataType.UINT32:\n                        return DataType.REFERENCE_32;\n                }\n                throw new Error(\"Invalid reference value: \" + token.value);\n        }\n        throw new Error(`Unrecognized type for ${token.type} value: ${token.value}`);\n    }\n\n    dataTypeToType(dataType: DataType): Type {\n        switch(dataType) {\n            case DataType.COMPLEX_OBJECT:\n                return \"complex\";\n            case DataType.EMPTY_ARRAY:\n            case DataType.ARRAY_8:\n            case DataType.ARRAY_16:\n            case DataType.ARRAY_32:\n                return \"array\";\n            case DataType.OBJECT_8:\n            case DataType.OBJECT_16:\n            case DataType.OBJECT_32:\n                return \"object\";\n            case DataType.SPLIT_8:\n            case DataType.SPLIT_16:\n            case DataType.SPLIT_32:\n                return \"split\";\n            case DataType.REFERENCE_8:\n            case DataType.REFERENCE_16:\n            case DataType.REFERENCE_32:\n                return \"reference\";\n            default:\n                return \"leaf\";\n        }\n    }\n\n    typeToStructureType(type: Type): StructureType {\n        switch (type) {\n            case \"leaf\":\n                return StructureType.LEAF;\n            case \"array\":\n                return StructureType.ARRAY;\n            case \"object\":\n                return StructureType.OBJECT;\n            case \"split\":\n                return StructureType.SPLIT;\n        }\n        throw new Error(\"Cannot translate to structure type: \" + type);\n    }\n}","import Token, { Hash, ReducedToken } from \"../tokenizer/Token\";\nimport { Header } from \"../tokenizer/Header\";\nimport { DataType, DataTypeUtils, StructureType } from \"../compression/DataType\";\n\n/**\n * Stores all information needed to extract data.\n * \n * headerTokens: Common tokens used by all files.\n * files: array of indices that should match to string tokens within headerTokens.\n * getDataTokens: function to retrieve the tokens for each file. Pass the index that corresponds with files.\n */\nexport interface DataStore {\n    version?: string;\n    compressedSize?: number;\n    originalDataSize?: number;\n    headerTokens: ReducedToken[];\n    files: number[];\n    getDataTokens(index: number): ReducedToken[] | undefined;\n}\n\n/**\n * Reduce header from using large tokens to reduce tokens.\n */\nexport default class Reducer {\n    dataTypeUtils: DataTypeUtils;\n\n    constructor() {\n        this.dataTypeUtils = new DataTypeUtils();\n    }\n\n    /**\n     * Reduce header with smaller tokens for storage\n     * \n     * @param header Represents all data that we have.\n     * @returns DataStorage object that's the minimum we can store.\n     */\n    reduce(header: Header): DataStore {\n        const hashToIndex : Record<Hash, number>  = {};\n        //  start with header tokens\n        const headerTokens = this.createReducedHeaderTokens(\n            this.filterSplit(Object.values(header.registry)\n                .filter(token => token.files.size > 1 || token.files.has(\"header\")),\n                header.registry),\n            hashToIndex);\n\n        //  save files\n        const fileEntries = Object.entries(header.files).sort(([name1], [name2]) => name1.localeCompare(name2));\n        const files = fileEntries.map(([,token]) => hashToIndex[token.nameToken.hash]);\n\n        //  save all files separately as complex objects.\n        const dataTokens = fileEntries.map(([, {token: root}]) => {\n            const subHashToIndex = {...hashToIndex};\n            const structure: StructureType[] = [];\n            const result: ReducedToken[] = [{\n                    type: \"complex\",\n                    value: structure,\n            }];\n            this.createComplexObject(root, subHashToIndex, header.registry, headerTokens, structure, result);\n            return result;\n        });\n\n        return {\n            originalDataSize: header.originalDataSize,\n            headerTokens,\n            files,\n            getDataTokens: (index: number) => dataTokens[index],\n        };\n    }\n\n    /**\n     * Sort tokens by frequency.\n     */\n    private sortTokens(tokens: Token[]): void {\n        tokens.sort((t1, t2) => t2.count - t1.count);\n    }\n\n    /**\n     * Organize tokens in groups of 255\n     * @param tokens \n     */\n    private organizeTokens(tokens: Token[]): Token[] {\n        if (!tokens.length) {\n            return tokens;\n        }\n        const buckets: Token[][] = [];\n        tokens.forEach(token => {\n            const dataType = this.dataTypeUtils.getFullTokenDataType(token);\n            let bucket: Token[] | undefined = undefined;\n            for (let b of buckets) {\n                if (b.length < 255 && this.dataTypeUtils.getFullTokenDataType(b[0]) === dataType) {\n                    bucket = b;\n                    break;\n                }\n            }\n            if (!bucket) {\n                bucket = [];\n                buckets.push(bucket);\n            }\n            bucket.push(token);\n        });\n\n        buckets.forEach(bucket => {\n            const dataType = this.dataTypeUtils.getFullTokenDataType(bucket[0]);\n            switch (dataType) {\n                case DataType.UINT8:\n                case DataType.UINT16:\n                case DataType.UINT32:\n                case DataType.INT8:\n                case DataType.INT16:\n                case DataType.INT32:\n                case DataType.FLOAT32:\n                case DataType.FLOAT64:\n                    bucket.sort((a, b) => b.value - a.value);\n                    break;\n                case DataType.STRING:\n                case DataType.UNICODE:\n                    bucket.sort((a, b) => b.value.length - a.value.length);\n                    break;\n                case DataType.ARRAY_8:\n                case DataType.ARRAY_16:\n                case DataType.ARRAY_32:\n                    bucket.sort((a, b) => b.value.length - a.value.length)\n                    break;\n            }\n        });\n        const resultTokens: Token[] = [];\n        buckets.forEach(bucket => bucket.forEach(token => resultTokens.push(token)));\n        return resultTokens;\n    }\n\n    private filterSplit(tokens: Token[], registry: Record<Hash, Token>): Token[] {\n        for (let token of tokens) {\n            if (token.type === \"split\") {\n                const [chunskHash, separatorsHash] = token.reference!;\n                const chunksToken = registry[chunskHash];\n                const separatorsToken = registry[separatorsHash];\n                if (chunksToken.count <= token.count && separatorsToken.count <= token.count) {\n                    chunksToken.deleted = true;\n                    separatorsToken.deleted = true;\n                    token.type = \"leaf\";\n                    delete token.reference;\n                }\n            }\n        }\n        return tokens.filter(({deleted}) => !deleted);\n    }\n\n    private createReducedHeaderTokens(tokens: Token[], hashToIndex : Record<Hash, number>, offset: number = 0) {\n        this.sortTokens(tokens);\n        const organizedTokens = this.organizeTokens(tokens);\n\n        organizedTokens.forEach(({hash}, index) => hashToIndex[hash] = index + offset);\n\n        return organizedTokens.map(token => ({\n            type: token.type,\n            value: token.reference?.map(hash => hashToIndex[hash]) ?? token.value,\n        }));\n    }\n\n    /**\n     *  Traverse object to produce a set of tokens used to produce a complex object\n     * @param token Root token\n     * @param hashToIndex Hash to index mapping\n     * @param result Resulting set of tokens\n     */\n    createComplexObject(token: Token, hashToIndex: Record<Hash, number>, registry: Record<Hash, Token>, headerTokens: ReducedToken[], structure: StructureType[], resultDataTokens: ReducedToken[]): void {\n        if (hashToIndex[token.hash] >= 0) {\n            structure.push(StructureType.LEAF);\n            resultDataTokens.push({ type: \"reference\", value: hashToIndex[token.hash] });\n        } else if (token.type === \"leaf\") {\n            structure.push(this.dataTypeUtils.typeToStructureType(token.type));\n            hashToIndex[token.hash] = headerTokens.length + resultDataTokens.length;\n            resultDataTokens.push({ type: token.type, value: token.value });\n        } else if (token.type === \"split\" || token.type === \"object\" || token.type === \"array\") {\n            structure.push(this.dataTypeUtils.typeToStructureType(token.type));\n            if (token.type === \"array\") {\n                resultDataTokens.push({ type: \"leaf\", value: token.reference?.length });\n            }\n            const subTokens = token.reference?.map((hash) => registry[hash]);\n            subTokens?.forEach(token => {\n                this.createComplexObject(token, hashToIndex, registry, headerTokens, structure, resultDataTokens);\n            });\n        } else {\n            throw new Error(\"Invalid token type\");\n        }\n    }\n}","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var n=e();for(var i in n)(\"object\"==typeof exports?exports:t)[i]=n[i]}}(this,(function(){return(()=>{\"use strict\";var t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},e={};t.r(e),t.d(e,{StreamDataView:()=>o});var n=function(){function t(t){this.encoding=t||\"utf-8\"}return t.prototype.decode=function(t){var e=String.fromCharCode.apply(null,Array.from(t));return\"utf-8\"===this.encoding?decodeURIComponent(escape(e)):e},t}(),i=function(){function t(t){this.encoding=t||\"utf-8\"}return t.prototype.encode=function(t){return\"utf-8\"===this.encoding&&(t=unescape(encodeURIComponent(t))),new Uint8Array(t.split(\"\").map((function(t){return t.charCodeAt(0)})))},t}(),o=function(){function t(t,e){this.offset=0,this.autoResize=!1,void 0===t&&(t=0,this.autoResize=!0),\"number\"==typeof t&&(t=new ArrayBuffer(t)),this.view=new DataView(t),this.littleEndian=!e}return t.fromByteString=function(e){var n=new t(e.split(\" \").length);return n.fromByteString(e),n},t.fromTextString=function(e,n){var o,s=new t((o=n?new i(\"utf-8\").encode(e):new i(\"ascii\").encode(e)).length);return s.setNextString(e,n,o.length),s},t.prototype.resize=function(t){var e=function(t,e){if(!(t instanceof ArrayBuffer))throw new TypeError(\"Source must be an instance of ArrayBuffer\");if(e<=t.byteLength)return t.slice(0,e);var n=new Uint8Array(t),i=new Uint8Array(new ArrayBuffer(e));return i.set(n),i.buffer}(this.getBuffer(),t);this.view=new DataView(e)},t.prototype.crop=function(){this.resize(this.getOffset())},t.prototype.getBuffer=function(){return this.view.buffer},t.prototype.skip=function(t){this.offset+=t},t.prototype.resetOffset=function(){this.offset=0},t.prototype.getOffset=function(){return this.offset},t.prototype.setOffset=function(t){this.offset=t},t.prototype.getInt8=function(t){return this.view.getInt8(t)},t.prototype.getUint8=function(t){return this.view.getUint8(t)},t.prototype.getNextInt8=function(){var t=this.getInt8(this.offset);return this.offset+=1,t},t.prototype.getNextUint8=function(){var t=this.getUint8(this.offset);return this.offset+=1,t},t.prototype.getInt16=function(t){return this.view.getInt16(t,this.littleEndian)},t.prototype.getUint16=function(t){return this.view.getUint16(t,this.littleEndian)},t.prototype.getNextInt16=function(){var t=this.getInt16(this.offset);return this.offset+=2,t},t.prototype.getNextUint16=function(){var t=this.getUint16(this.offset);return this.offset+=2,t},t.prototype.getInt32=function(t){return this.view.getInt32(t,this.littleEndian)},t.prototype.getUint32=function(t){return this.view.getUint32(t,this.littleEndian)},t.prototype.getNextInt32=function(){var t=this.getInt32(this.offset);return this.offset+=4,t},t.prototype.getNextUint32=function(){var t=this.getUint32(this.offset);return this.offset+=4,t},t.prototype.getFloat32=function(t){return this.view.getFloat32(t,this.littleEndian)},t.prototype.getFloat64=function(t){return this.view.getFloat64(t,this.littleEndian)},t.prototype.getNextFloat32=function(){var t=this.getFloat32(this.offset);return this.offset+=4,t},t.prototype.getNextFloat64=function(){var t=this.getFloat64(this.offset);return this.offset+=8,t},t.prototype.setInt8=function(t,e){this.handleAutoResize(t,1),this.view.setInt8(t,e)},t.prototype.setUint8=function(t,e){this.handleAutoResize(t,1),this.view.setUint8(t,e)},t.prototype.setNextInt8=function(t){this.setInt8(this.offset,t),this.offset+=1},t.prototype.setNextUint8=function(t){this.setUint8(this.offset,t),this.offset+=1},t.prototype.setInt16=function(t,e){this.handleAutoResize(t,2),this.view.setInt16(t,e,this.littleEndian)},t.prototype.setUint16=function(t,e){this.handleAutoResize(t,2),this.view.setUint16(t,e,this.littleEndian)},t.prototype.setNextInt16=function(t){this.setInt16(this.offset,t),this.offset+=2},t.prototype.setNextUint16=function(t){this.setUint16(this.offset,t),this.offset+=2},t.prototype.setInt32=function(t,e){this.handleAutoResize(t,4),this.view.setInt32(t,e,this.littleEndian)},t.prototype.setUint32=function(t,e){this.handleAutoResize(t,4),this.view.setUint32(t,e,this.littleEndian)},t.prototype.setNextInt32=function(t){this.setInt32(this.offset,t),this.offset+=4},t.prototype.setNextUint32=function(t){this.setUint32(this.offset,t),this.offset+=4},t.prototype.setFloat32=function(t,e){this.handleAutoResize(t,8),this.view.setFloat32(t,e,this.littleEndian)},t.prototype.setFloat64=function(t,e){this.handleAutoResize(t,8),this.view.setFloat64(t,e,this.littleEndian)},t.prototype.setNextFloat32=function(t){this.setFloat32(this.offset,t),this.offset+=4},t.prototype.setNextFloat64=function(t){this.setFloat64(this.offset,t),this.offset+=8},t.prototype.getBytes=function(t,e){void 0===t&&(t=0),e=e||this.view.buffer.byteLength-t;var n=this.getBuffer().slice(t,t+e);return new Uint8Array(n)},t.prototype.getNextBytes=function(t){var e=this.getBytes(this.offset,t);return this.offset+=t||0,e},t.prototype.setBytes=function(t,e){(e instanceof ArrayBuffer||Array.isArray(e))&&(e=new Uint8Array(e));var n=e;this.handleAutoResize(t,n.byteLength);for(var i=0;i<n.byteLength;i++)this.setUint8(t+i,n[i])},t.prototype.setNextBytes=function(t){Array.isArray(t)&&(t=new Uint8Array(t)),this.setBytes(this.offset,t),this.offset+=t.byteLength},t.prototype.getString=function(t,e,i,o){var s=this.getBytes(t,e);if(o){var r=s.indexOf(0);r>=0&&(s=s.slice(0,r))}return i?new n(\"utf-8\").decode(s):new n(\"ascii\").decode(s)},t.prototype.getNextString=function(t,e,n){var i=this.getString(this.offset,t,e,n);return this.offset+=t,i},t.prototype.setString=function(t,e,n,o){var s;s=n?new i(\"utf-8\").encode(e):new i(\"ascii\").encode(e),o=\"number\"==typeof o?o:s.byteLength,this.handleAutoResize(t,o);for(var r=0;r<o;r++)this.view.setUint8(t+r,s[r]||0);return o},t.prototype.setNextString=function(t,e,n){this.offset+=this.setString(this.offset,t,e,n)},t.prototype.toByteString=function(){return Array.from(new Uint8Array(this.getBuffer())).map((function(t){return(\"00\"+t.toString(16)).slice(-2)})).join(\" \").toUpperCase()},t.prototype.toTextString=function(t){return this.getString(0,this.view.byteLength,t)},t.prototype.fromByteString=function(t){var e=t.split(\" \"),n=new ArrayBuffer(e.length);this.view=new DataView(n),this.setNextBytes(new Uint8Array(e.map((function(t){return parseInt(t,16)})))),this.resetOffset()},t.prototype.getLength=function(){return this.view.byteLength},t.prototype.clear=function(){this.view=new DataView(new ArrayBuffer(this.view.byteLength)),this.offset=0},t.prototype.handleAutoResize=function(t,e){this.autoResize&&this.getBuffer().byteLength<t+e&&this.resize(t+e)},t}();return e})()}));","//13093\nimport sdv from \"stream-data-view\";\nimport { ReducedToken } from \"../tokenizer/Token\";\nimport { DataType, DataTypeUtils } from \"./DataType\";\n\ntype Tester = (encoder: TokenEncoder, decoder: TokenEncoder, reset: () => void) => void;\n\ninterface MultiInfo {\n    organized: boolean;\n    lastStringLength?: number;\n}\n\nconst MAX_ARRAY_SIZE = 255;\n\nexport default class TokenEncoder {\n    streamDataView: sdv.StreamDataView;\n    dataTypeUtils: DataTypeUtils;\n\n    constructor(streamDataView: sdv.StreamDataView) {\n        this.streamDataView = streamDataView;\n        this.dataTypeUtils = new DataTypeUtils();\n    }\n\n    encodeTokens(tokens: ReducedToken[], organized: boolean) {\n        let pos = 0;\n        while (pos < tokens.length) {\n            const count = this.encodeMulti(tokens, pos, organized);\n            if (count) {\n                pos += count;\n            }\n        }\n        this.encodeMulti([], pos, organized);\n    }\n\n    decodeTokens(organized: boolean) {\n        const tokens:  ReducedToken[] = [];\n        while(this.streamDataView.getOffset() < this.streamDataView.getLength()) {\n            if (!this.decodeMulti(tokens, organized)) {\n                break;\n            }\n        }\n        return tokens;\n    }\n\n    encodeToken(token: ReducedToken, dataType?: DataType, multiInfo?: MultiInfo): void {\n        const usedDataType: DataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getDataType(token));\n        switch (usedDataType) {\n            case DataType.UNDEFINED:\n            case DataType.NULL:\n            case DataType.BOOLEAN_TRUE:\n            case DataType.BOOLEAN_FALSE:\n            case DataType.EMPTY_ARRAY:\n                break;\n            case DataType.INT8:\n            case DataType.UINT8:\n            case DataType.INT16:\n            case DataType.UINT16:\n            case DataType.INT32:\n            case DataType.UINT32:\n            case DataType.FLOAT32:\n            case DataType.FLOAT64:\n                this.encodeSingleNumber(token.value, usedDataType);\n                break;\n            case DataType.STRING:\n            case DataType.UNICODE:\n                this.encodeString(token.value, usedDataType, multiInfo);\n                break;\n            case DataType.OBJECT_8:\n            case DataType.OBJECT_16:\n            case DataType.OBJECT_32:\n                this.encodeObjectToken(token, usedDataType);\n                break;\n            case DataType.SPLIT_8:\n            case DataType.SPLIT_16:\n            case DataType.SPLIT_32:\n                this.encodeSplitToken(token, usedDataType);\n                break;\n            case DataType.ARRAY_8:\n            case DataType.ARRAY_16:\n            case DataType.ARRAY_32:\n            case DataType.OFFSET_ARRAY_8:\n            case DataType.OFFSET_ARRAY_16:\n            case DataType.OFFSET_ARRAY_32:\n                this.encodeArrayToken(token, usedDataType);\n                break;\n            case DataType.REFERENCE_8:\n            case DataType.REFERENCE_16:\n            case DataType.REFERENCE_32:\n                this.encodeReferenceToken(token, usedDataType);\n                break;\n            case DataType.COMPLEX_OBJECT:\n                this.encodeComplexToken(token, usedDataType);\n                break;\n            default:\n                throw new Error(\"Invalid dataType: \" + usedDataType);\n            }\n    }\n\n    decodeToken(dataType?: DataType, multiInfo?: MultiInfo): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n        switch (usedDataType) {\n            case DataType.UNDEFINED:\n                return { type: \"leaf\", value: undefined };\n            case DataType.NULL:\n                return { type: \"leaf\", value: null };\n            case DataType.BOOLEAN_TRUE:\n                return { type: \"leaf\", value: true };\n            case DataType.BOOLEAN_FALSE:\n                return { type: \"leaf\", value: false };\n            case DataType.EMPTY_ARRAY:\n                return { type: \"array\", value: [] };\n            case DataType.UINT2:\n            case DataType.UINT4:\n                    throw new Error(\"Use decode number array.\");\n            case DataType.INT8:\n            case DataType.UINT8:\n            case DataType.INT16:\n            case DataType.UINT16:\n            case DataType.INT32:\n            case DataType.UINT32:\n            case DataType.FLOAT32:\n            case DataType.FLOAT64:\n                return { type: \"leaf\", value: this.decodeSingleNumber(usedDataType) };\n            case DataType.STRING:\n            case DataType.UNICODE:\n                return { type: \"leaf\", value: this.decodeString(usedDataType, multiInfo) };\n            case DataType.OBJECT_8:\n            case DataType.OBJECT_16:\n            case DataType.OBJECT_32:\n                return this.decodeObjectToken(usedDataType);\n            case DataType.SPLIT_8:\n            case DataType.SPLIT_16:\n            case DataType.SPLIT_32:\n                return this.decodeSplitToken(usedDataType);\n            case DataType.ARRAY_8:\n            case DataType.ARRAY_16:\n            case DataType.ARRAY_32:\n            case DataType.OFFSET_ARRAY_8:\n            case DataType.OFFSET_ARRAY_16:\n            case DataType.OFFSET_ARRAY_32:\n                return this.decodeArrayToken(usedDataType);\n            case DataType.REFERENCE_8:\n            case DataType.REFERENCE_16:\n            case DataType.REFERENCE_32:\n                return this.decodeReferenceToken(usedDataType);\n            case DataType.COMPLEX_OBJECT:\n                    return this.decodeComplexToken(usedDataType);\n            default:\n                throw new Error(\"Invalid dataType: \" + usedDataType);\n        }\n    }\n\n    isOffsetDataType(dataType: DataType) {\n        return dataType === DataType.OFFSET_ARRAY_8 || dataType === DataType.OFFSET_ARRAY_16 || dataType === DataType.OFFSET_ARRAY_32;\n    }\n\n    encodeArrayToken(arrayToken: ReducedToken, dataType?: DataType) {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getDataType(arrayToken));\n        const numberType = usedDataType === DataType.ARRAY_8 || usedDataType === DataType.OFFSET_ARRAY_8\n            ? DataType.UINT8\n            : usedDataType === DataType.ARRAY_16 || usedDataType === DataType.OFFSET_ARRAY_16\n            ? DataType.UINT16 : DataType.UINT32;\n\n        let indices = arrayToken.value;\n        if (this.isOffsetDataType(usedDataType)) {\n            const offset = Math.min(...indices);\n            indices = indices.map((value: number) => value - offset);\n            this.encodeSingleNumber(offset);\n        }\n\n        this.encodeNumberArray(indices, numberType);\n    }\n\n    decodeArrayToken(dataType?: DataType): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n\n        let offset = 0;\n        if (this.isOffsetDataType(usedDataType)) {\n            offset = this.decodeSingleNumber();\n        }\n\n        const numberType = usedDataType === DataType.ARRAY_8 || usedDataType === DataType.OFFSET_ARRAY_8\n            ? DataType.UINT8\n            : usedDataType === DataType.ARRAY_16 || usedDataType === DataType.OFFSET_ARRAY_16\n            ? DataType.UINT16 : DataType.UINT32;\n        const indices = this.decodeNumberArray(numberType)\n            .map(value => value + offset);\n        return {\n            type: \"array\",\n            value: indices,\n        }\n    }\n\n    encodeObjectToken(objectToken: ReducedToken, dataType?: DataType) {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getDataType(objectToken));\n        const numberType = usedDataType === DataType.OBJECT_8 ? DataType.UINT8 : usedDataType === DataType.OBJECT_16 ? DataType.UINT16 : DataType.UINT32;\n        const [keysIndex, valuesIndex] = objectToken.value;\n        this.encodeSingleNumber(keysIndex, numberType);\n        this.encodeSingleNumber(valuesIndex, numberType);\n    }\n\n    decodeObjectToken(dataType?: DataType): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n        const numberType = usedDataType === DataType.OBJECT_8 ? DataType.UINT8 : usedDataType === DataType.OBJECT_16 ? DataType.UINT16 : DataType.UINT32;\n        return {\n            type: \"object\",\n            value: [this.decodeSingleNumber(numberType), this.decodeSingleNumber(numberType)],\n        };\n    }\n\n    encodeSplitToken(splitToken: ReducedToken, dataType?: DataType) {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getDataType(splitToken));\n        const numberType = usedDataType === DataType.SPLIT_8 ? DataType.UINT8 : usedDataType === DataType.SPLIT_16 ? DataType.UINT16 : DataType.UINT32;\n        const [chunksIndex, separatorsIndex] = splitToken.value;\n        this.encodeSingleNumber(chunksIndex, numberType);\n        this.encodeSingleNumber(separatorsIndex, numberType);\n    }\n\n    decodeSplitToken(dataType?: DataType): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n        const numberType = usedDataType === DataType.SPLIT_8 ? DataType.UINT8 : usedDataType === DataType.SPLIT_16 ? DataType.UINT16 : DataType.UINT32;\n        return {\n            type: \"split\",\n            value: [this.decodeSingleNumber(numberType), this.decodeSingleNumber(numberType)],\n        };\n    }\n\n    encodeReferenceToken(token: ReducedToken, dataType?: DataType) {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getDataType(token));\n        const numberType = usedDataType === DataType.REFERENCE_8 ? DataType.UINT8 : usedDataType === DataType.REFERENCE_16 ? DataType.UINT16 : DataType.UINT32;\n        const index = token.value;\n        this.encodeSingleNumber(index, numberType);\n    }\n\n    decodeReferenceToken(dataType?: DataType): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n        const numberType = usedDataType === DataType.REFERENCE_8 ? DataType.UINT8 : usedDataType === DataType.REFERENCE_16 ? DataType.UINT16 : DataType.UINT32;\n        return {\n            type: \"reference\",\n            value: this.decodeSingleNumber(numberType),\n        };\n    }\n\n    encodeComplexToken(token: ReducedToken, dataType?: DataType) {\n        if (dataType === undefined) {\n            this.encodeDataType(this.dataTypeUtils.getDataType(token));\n        }\n        const structure = token.value;\n        this.encodeNumberArray(structure, DataType.UINT2);\n    }\n\n    decodeComplexToken(dataType?: DataType): ReducedToken {\n        const usedDataType = dataType ?? this.decodeDataType();\n        const structure = this.decodeNumberArray(DataType.UINT2);\n        return {\n            type: this.dataTypeUtils.dataTypeToType(usedDataType),\n            value: structure,\n        };\n    }\n\n    encodeDataType(dataType: DataType): DataType {\n        this.streamDataView.setNextUint8(dataType);\n        return dataType;\n    }\n\n    decodeDataType(): DataType {\n        const dataType = this.streamDataView.getNextUint8();\n        return dataType;\n    }\n\n    encodeMulti(tokens: ReducedToken[], pos: number, organized: boolean): number {\n        if (pos >= tokens.length) {\n            this.encodeSingleNumber(0, DataType.UINT8);\n            return 0;\n        }\n        const firstType = this.dataTypeUtils.getDataType(tokens[pos]);\n        let multiCount;\n        const maxCount = Math.min(tokens.length - pos, 255);\n        for (multiCount = 1; multiCount < maxCount; multiCount++) {\n            if (this.dataTypeUtils.getDataType(tokens[pos + multiCount]) !== firstType) {\n                break;\n            }\n        }\n        //  encode a multi, meaning that the same type is going to get repeated multiple times\n        this.encodeSingleNumber(multiCount, DataType.UINT8);\n        this.encodeDataType(firstType);\n        const multiInfo: MultiInfo = { organized };\n        for (let i = 0; i < multiCount; i++) {\n            this.encodeToken(tokens[pos + i], firstType, multiInfo);\n        }\n        return multiCount;\n    }\n\n    decodeMulti(tokens: ReducedToken[], organized: boolean): number {\n        const count = this.streamDataView.getNextUint8();\n        if (!count) {\n            return 0;\n        }\n        const dataType = this.decodeDataType();\n        const multiInfo: MultiInfo = { organized };\n        for (let i = 0; i < count; i++) {\n            const token = this.decodeToken(dataType, multiInfo);\n            tokens.push(token);\n        }\n        return count;\n    }\n\n    encodeSingleNumber(value: number, dataType?: DataType) {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getNumberDataType(value));\n\n        switch (usedDataType) {\n            case DataType.UINT2:\n            case DataType.UINT4:\n                    throw new Error(\"Use encode number array.\");\n            case DataType.UINT8:\n                this.streamDataView.setNextUint8(value);\n                break;\n            case DataType.INT8:\n                this.streamDataView.setNextInt8(value);\n                break;\n            case DataType.UINT16:\n                this.streamDataView.setNextUint16(value);\n                break;\n            case DataType.INT16:\n                this.streamDataView.setNextInt16(value);\n                break;\n            case DataType.UINT32:\n                this.streamDataView.setNextUint32(value);\n                break;\n            case DataType.INT32:\n                this.streamDataView.setNextInt32(value);\n                break;\n            case DataType.FLOAT32:\n                this.streamDataView.setNextFloat32(value);\n                break;\n            case DataType.FLOAT64:\n                this.streamDataView.setNextFloat64(value);\n                break;\n            default:\n                throw new Error(\"Invalid dataType for number: \" + usedDataType);\n        }\n    }\n\n    decodeSingleNumber(dataType?: DataType): number {\n        const usedDataType = dataType ?? this.decodeDataType();\n\n        switch (usedDataType) {\n            case DataType.UINT2:\n            case DataType.UINT4:\n                 throw new Error(\"Use decode number array.\");\n            case DataType.UINT8:\n                return this.streamDataView.getNextUint8();\n            case DataType.INT8:\n                return this.streamDataView.getNextInt8();\n            case DataType.UINT16:\n                return this.streamDataView.getNextUint16();\n            case DataType.INT16:\n                return this.streamDataView.getNextInt16();\n            case DataType.UINT32:\n                return this.streamDataView.getNextUint32();\n            case DataType.INT32:\n                return this.streamDataView.getNextInt32();\n            case DataType.FLOAT32:\n                return this.streamDataView.getNextFloat32();\n            case DataType.FLOAT64:\n                return this.streamDataView.getNextFloat64();\n            default:\n                throw new Error(\"Invalid dataType for number: \" + usedDataType);\n        }\n    }\n\n    bit2ToNum([a, b, c, d]: number[]): number {\n        return ((a ?? 0) << 0) | ((b ?? 0) << 2) | ((c ?? 0) << 4) | ((d ?? 0) << 6);\n    }\n\n    numToBit2(n: number, size: number = 4): number[] {\n        return [(n >> 0) & 3, (n >> 2) & 3, (n >> 4) & 3, (n >> 6) & 3].slice(0, size);\n    }\n\n    bit4ToNum([a, b]: number[]): number {\n        return ((a ?? 0) << 0) | ((b ?? 0) << 4);\n    }\n\n    numToBit4(n: number, size: number = 2): number[] {\n        return [(n >> 0) & 15, (n >> 4) & 15].slice(0, size);\n    }\n\n    encodeNumberArray(array: number[], dataType?: DataType) {\n        if (dataType === DataType.UINT2 || dataType === DataType.UINT4) {\n            const stride = dataType === DataType.UINT2 ? 4 : 2;\n            const transform = dataType === DataType.UINT2 ? this.bit2ToNum : this.bit4ToNum;\n            const bytes = [];\n            for (let i = 0; i < array.length; i += stride) {\n                bytes.push(transform(array.slice(i, i + stride)));\n            }\n            this.encodeNumberArray(bytes, DataType.UINT8);\n            this.encodeSingleNumber(array.length - bytes.length * stride, DataType.INT8);\n            return;\n        }\n\n        let pos;\n        for (pos = 0; pos < array.length;) {\n            const size = Math.min(MAX_ARRAY_SIZE, array.length - pos);\n            this.encodeSingleNumber(size, DataType.UINT8);\n            if (!size) {\n                break;\n            }\n\n            const bestType: DataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getBestType(array));\n\n            for (let i = 0; i < size; i++) {\n                this.encodeSingleNumber(array[pos + i], bestType);\n            }    \n\n            pos += size;\n        }\n        if (pos === MAX_ARRAY_SIZE) {\n            //  Reached the max size, but the next one is 0.\n            this.encodeSingleNumber(0, DataType.UINT8);\n        }\n    }\n\n    decodeNumberArray(dataType?: DataType): number[] {\n        if (dataType === DataType.UINT2 || dataType === DataType.UINT4) {\n            const transform = dataType === DataType.UINT2 ? this.numToBit2 : this.numToBit4;\n            const structure = [];\n            const bytes = this.decodeNumberArray(DataType.UINT8);\n            for (let byte of bytes) {\n                structure.push(...transform(byte));\n            }\n            const sizeDiff = this.decodeSingleNumber(DataType.INT8);\n            structure.length += sizeDiff;\n            return structure;                \n        }\n        let size;\n        const numbers = [];\n        do {\n            size = this.decodeSingleNumber(DataType.UINT8);\n            if (!size) {\n                break;\n            }\n\n            const type: DataType = dataType ?? this.decodeDataType();\n            for (let i = 0; i < size; i++) {\n                numbers.push(this.decodeSingleNumber(type));\n            }    \n        } while (size >= MAX_ARRAY_SIZE);\n        return numbers;\n    }\n\n    encodeString(value: string, dataType?: DataType, multiInfo?: MultiInfo): void {\n        const usedDataType = dataType ?? this.encodeDataType(this.dataTypeUtils.getStringDataType(value));\n        const letterCodes = value.split(\"\").map(l => l.charCodeAt(0));\n        if (!multiInfo?.organized || multiInfo.lastStringLength !== value.length) {\n            letterCodes.push(0);\n        }\n        // console.log(letterCodes, value, (letterCodes).map((value) => !value ? 0 : value - min + 1));\n        const numberType = usedDataType === DataType.STRING ? DataType.UINT8 : DataType.UINT16;\n        letterCodes.forEach(code => this.encodeSingleNumber(code, numberType));\n        if (multiInfo) {\n            multiInfo.lastStringLength = value.length;\n        }\n    }\n\n    decodeString(dataType?: DataType, multiInfo?: MultiInfo): string {\n        const usedDataType = dataType ?? this.decodeDataType();\n        const charCodes = [];\n        const numberType = usedDataType === DataType.STRING ? DataType.UINT8 : DataType.UINT16;\n        do {\n            const code = this.decodeSingleNumber(numberType);\n            if (!code) {\n                break;\n            }\n            charCodes.push(code);\n            if (multiInfo?.organized && multiInfo?.lastStringLength && charCodes.length >= multiInfo?.lastStringLength) {\n                break;\n            }\n        } while(true);\n        const string = charCodes.map(code => String.fromCharCode(code)).join(\"\");\n        if (multiInfo) {\n            multiInfo.lastStringLength = string.length;\n        }\n        return string;\n    }\n\n    static selfTest() {\n        const testers: Tester[] = [\n            //  0\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(DataType.STRING,\n                    dataType => tokenEncoder.encodeDataType(dataType),\n                    reset,\n                    () => tokenDecoder.decodeDataType(),\n                );\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(DataType.UNDEFINED,\n                    dataType => tokenEncoder.encodeDataType(dataType),\n                    reset,\n                    () => tokenDecoder.decodeDataType(),\n                );\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(33,\n                    number => tokenEncoder.encodeSingleNumber(number, DataType.INT8),\n                    reset,\n                    () => tokenDecoder.decodeSingleNumber(DataType.INT8));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([\n                        { type: \"leaf\", value: 123 },\n                        { type: \"leaf\", value: 45 },\n                        { type: \"leaf\", value: 67 },\n                        { type: \"leaf\", value: 89 },\n                    ],\n                    header => tokenEncoder.encodeMulti(header, 0, false),\n                    reset,\n                    () => {\n                        const result: ReducedToken[] = [];\n                        tokenDecoder.decodeMulti(result, false);\n                        return result;\n                    });\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([\n                        { type: \"leaf\", value: 1000001 },\n                        { type: \"leaf\", value: 1002000 },\n                        { type: \"leaf\", value: 1003001 },\n                    ],\n                    header => tokenEncoder.encodeMulti(header, 0, false),\n                    reset,\n                    () => {\n                        const result: ReducedToken[] = [];\n                        tokenDecoder.decodeMulti(result, false);\n                        return result;\n                    });                \n            },\n            //  5\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([1, 2, 3, 4, 10, 20, 200],\n                    array => tokenEncoder.encodeNumberArray(array),\n                    reset,\n                    () => tokenDecoder.decodeNumberArray());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(new Array(2000).fill(null).map((_,index) => index),\n                    array => tokenEncoder.encodeNumberArray(array),\n                    reset,\n                    () => tokenDecoder.decodeNumberArray());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([10000, -202, 3, 4, 10, 20, 3200],\n                    array => tokenEncoder.encodeNumberArray(array),\n                    reset,\n                    () => tokenDecoder.decodeNumberArray());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(\"teststring\",\n                    string => tokenEncoder.encodeString(string),\n                    reset,\n                    () => tokenDecoder.decodeString());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(\"teststring\",\n                    string => tokenEncoder.encodeString(string, DataType.STRING),\n                    reset,\n                    () => tokenDecoder.decodeString(DataType.STRING));\n            },\n            //  10\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(\"test😀😃😄😁😆\",\n                    string => tokenEncoder.encodeString(string),\n                    reset,\n                    () => tokenDecoder.decodeString());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"object\", value: [200, 201] },\n                    o => tokenEncoder.encodeObjectToken(o),\n                    reset,\n                    () => tokenDecoder.decodeObjectToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"object\", value: [2000, 2001] },\n                    o => tokenEncoder.encodeObjectToken(o),\n                    reset,\n                    () => tokenDecoder.decodeObjectToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"object\", value: [2000, 2001] },\n                    o => tokenEncoder.encodeObjectToken(o, DataType.OBJECT_32),\n                    reset,\n                    () => tokenDecoder.decodeObjectToken(DataType.OBJECT_32));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"split\", value: [200, 201] },\n                    o => tokenEncoder.encodeSplitToken(o),\n                    reset,\n                    () => tokenDecoder.decodeSplitToken());\n            },\n            //  15\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"split\", value: [2000, 2001] },\n                    o => tokenEncoder.encodeSplitToken(o),\n                    reset,\n                    () => tokenDecoder.decodeSplitToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"split\", value: [2000, 2001] },\n                    o => tokenEncoder.encodeSplitToken(o, DataType.SPLIT_32),\n                    reset,\n                    () => tokenDecoder.decodeSplitToken(DataType.SPLIT_32));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"leaf\", value: \"tokenstring\" },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"leaf\", value: 123.5 },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"leaf\", value: \"😁😆\" },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            //  20\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"array\", value: [1, 10, 20, 30, 200] },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"array\", value: [1001, 1010, 1020, 1030, 1200] },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"array\", value: [10010, 10100, 10300, 20000] },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"array\", value: [10010, 10100, 10000] },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"array\", value: new Array(260).fill(null).map((_,index) => index) },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            //  25\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(new Array(100).fill(null).map((_,index) => {\n                    const token: ReducedToken = {\n                        type: \"array\",\n                        value: new Array(index).fill(null).map((_, index) => index),\n                    };\n                    return token;\n                }),\n                    o => tokenEncoder.encodeTokens(o, false),\n                    reset,\n                    () => tokenDecoder.decodeTokens(false));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(new Array(260).fill(null).map((_,index) => {\n                    const token: ReducedToken = {\n                        type: \"array\",\n                        value: new Array(index).fill(null).map((_, index) => index),\n                    };\n                    return token;\n                }),\n                    o => tokenEncoder.encodeTokens(o, false),\n                    reset,\n                    () => tokenDecoder.decodeTokens(false));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(new Array(260).fill(null).map((_) => {\n                    const token: ReducedToken = {\n                        type: \"array\",\n                        value: [1],\n                    };\n                    return token;\n                }),\n                    o => tokenEncoder.encodeTokens(o, false),\n                    reset,\n                    () => tokenDecoder.decodeTokens(false));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"complex\", value: [1, 2, 3, 2, 1, 2, 1, 0] },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction({ type: \"complex\", valuesplit(\"\").map(a => parseInt(a)) },\n                    o => tokenEncoder.encodeToken(o),\n                    reset,\n                    () => tokenDecoder.decodeToken());\n            },\n            //  30\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([1, 2, 3, 2, 1, 2, 1, 0],\n                    o => tokenEncoder.encodeNumberArray(o, DataType.UINT2),\n                    reset,\n                    () => tokenDecoder.decodeNumberArray(DataType.UINT2));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction([1, 15, 12, 12, 1, 9, 1, 0],\n                    o => tokenEncoder.encodeNumberArray(o, DataType.UINT4),\n                    reset,\n                    () => tokenDecoder.decodeNumberArray(DataType.UINT4));\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(\"xyzxyzyzxxxyyyzzz\",\n                    o => tokenEncoder.encodeString(o),\n                    reset,\n                    () => tokenDecoder.decodeString());\n            },\n            (tokenEncoder, tokenDecoder, reset) => {\n                this.testAction(\"abcdeabcabcadbdddba\",\n                    o => tokenEncoder.encodeString(o),\n                    reset,\n                    () => tokenDecoder.decodeString());\n            },\n        ];\n\n        testers.forEach((tester, index) => {\n            const streamDataView = new sdv.StreamDataView();\n            const encoder = new TokenEncoder(streamDataView);\n            const decoder = new TokenEncoder(streamDataView);\n            const reset = () => streamDataView.resetOffset();\n            tester(encoder, decoder, reset);\n            console.info(`✅ Passed test ${index}.`);\n        });\n    }\n\n    private static testAction<T>(\n            value: T,\n            encode: (value: T) => any,\n            reset: () => void,\n            decode: () => T,\n            check: (result: T, value: T) => void = (result, value) => console.assert(JSON.stringify(result) === JSON.stringify(value), `Not equal: \\n%s\\n!==\\n%s (expected)`, JSON.stringify(result), JSON.stringify(value))) {\n        encode(value);\n        reset();\n        const decoded = decode();\n        reset();\n        check(decoded, value);\n    }\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import Encoder from \"./Encoder\";\nimport * as fflate from 'fflate';\n\nexport default class FFlateEncoder implements Encoder {\n    encode(arrayBuffer: ArrayBuffer): ArrayBuffer {\n        return fflate.gzipSync(new Uint8Array(arrayBuffer)).buffer;\n    }\n    decode(arrayBuffer: ArrayBuffer): ArrayBuffer {\n        return fflate.gunzipSync(new Uint8Array(arrayBuffer)).buffer;\n    }\n\n}","export type Type = \"leaf\" | \"array\" | \"object\" | \"split\" | \"reference\" | \"complex\";\nexport type Hash = string;\n\nexport const SPLIT_REGEX = /\\W+/g;\nexport const TEST_REGEX = /(\\w{3,}\\W+){2,}|(\\W+\\w{3,}){2,}/\n\n/**\n * Token represent each chunk of data within an object.\n */\nexport default interface Token extends StoredToken {\n    hash: Hash;\n    files: Set<string>;\n    order: number;\n    count: number;\n    reference?: Hash[];\n    deleted?: boolean;\n}\n\n/**\n * A minimal version of a token, where we eliminate extra data like hash.\n */\nexport interface StoredToken {\n    type: Type;\n    value: any;\n}\n\n/**\n * Stored token with added debug field for easier debugging, and cache for extraction optimization.\n */\nexport interface ReducedToken extends StoredToken {\n    cache?: any;\n}\n\n/**\n * detect the type of a value\n *\n * @param value Value to analyze\n * @returns type of the value\n */\nexport function getType(value: any): Type {\n    if (Array.isArray(value)) {\n        return \"array\";\n    } else if (typeof value === \"object\" && value) {\n        return \"object\";\n    } else if (typeof value === \"string\" && new Set(value).size < 16) {\n        return \"leaf\";\n    } else if (typeof value === \"string\" && TEST_REGEX.test(value)) {\n        return \"split\";\n    } else {\n        return \"leaf\";\n    }\n}","/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/* global define */\n\n/* eslint-disable strict */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Add integers, wrapping at 2^32.\n   * This uses 16-bit operations internally to work around bugs in interpreters.\n   *\n   * @param {number} x First integer\n   * @param {number} y Second integer\n   * @returns {number} Sum\n   */\n  function safeAdd(x, y) {\n    var lsw = (x & 0xffff) + (y & 0xffff)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xffff)\n  }\n\n  /**\n   * Bitwise rotate a 32-bit number to the left.\n   *\n   * @param {number} num 32-bit number\n   * @param {number} cnt Rotation count\n   * @returns {number} Rotated number\n   */\n  function bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  }\n\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} q q\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t)\n  }\n  /**\n   * Basic operation the algorithm uses.\n   *\n   * @param {number} a a\n   * @param {number} b b\n   * @param {number} c c\n   * @param {number} d d\n   * @param {number} x x\n   * @param {number} s s\n   * @param {number} t t\n   * @returns {number} Result\n   */\n  function md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t)\n  }\n\n  /**\n   * Calculate the MD5 of an array of little-endian words, and a bit length.\n   *\n   * @param {Array} x Array of little-endian words\n   * @param {number} len Bit length\n   * @returns {Array<number>} MD5 Array\n   */\n  function binlMD5(x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << len % 32\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = safeAdd(a, olda)\n      b = safeAdd(b, oldb)\n      c = safeAdd(c, oldc)\n      d = safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  }\n\n  /**\n   * Convert an array of little-endian words to a string\n   *\n   * @param {Array<number>} input MD5 Array\n   * @returns {string} MD5 string\n   */\n  function binl2rstr(input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)\n    }\n    return output\n  }\n\n  /**\n   * Convert a raw string to an array of little-endian words\n   * Characters >255 have their high-byte silently ignored.\n   *\n   * @param {string} input Raw input string\n   * @returns {Array<number>} Array of little-endian words\n   */\n  function rstr2binl(input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32\n    }\n    return output\n  }\n\n  /**\n   * Calculate the MD5 of a raw string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrMD5(s) {\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))\n  }\n\n  /**\n   * Calculates the HMAC-MD5 of a key and some data (raw strings)\n   *\n   * @param {string} key HMAC key\n   * @param {string} data Raw input string\n   * @returns {string} Raw MD5 string\n   */\n  function rstrHMACMD5(key, data) {\n    var i\n    var bkey = rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5c5c5c5c\n    }\n    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))\n  }\n\n  /**\n   * Convert a raw string to a hex string\n   *\n   * @param {string} input Raw input string\n   * @returns {string} Hex encoded string\n   */\n  function rstr2hex(input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n    }\n    return output\n  }\n\n  /**\n   * Encode a string as UTF-8\n   *\n   * @param {string} input Input string\n   * @returns {string} UTF8 string\n   */\n  function str2rstrUTF8(input) {\n    return unescape(encodeURIComponent(input))\n  }\n\n  /**\n   * Encodes input string as raw MD5 string\n   *\n   * @param {string} s Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawMD5(s) {\n    return rstrMD5(str2rstrUTF8(s))\n  }\n  /**\n   * Encodes input string as Hex encoded string\n   *\n   * @param {string} s Input string\n   * @returns {string} Hex encoded string\n   */\n  function hexMD5(s) {\n    return rstr2hex(rawMD5(s))\n  }\n  /**\n   * Calculates the raw HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function rawHMACMD5(k, d) {\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))\n  }\n  /**\n   * Calculates the Hex encoded HMAC-MD5 for the given key and data\n   *\n   * @param {string} k HMAC key\n   * @param {string} d Input string\n   * @returns {string} Raw MD5 string\n   */\n  function hexHMACMD5(k, d) {\n    return rstr2hex(rawHMACMD5(k, d))\n  }\n\n  /**\n   * Calculates MD5 value for a given string.\n   * If a key is provided, calculates the HMAC-MD5 value.\n   * Returns a Hex encoded string unless the raw argument is given.\n   *\n   * @param {string} string Input string\n   * @param {string} [key] HMAC key\n   * @param {boolean} [raw] Raw output switch\n   * @returns {string} MD5 output\n   */\n  function md5(string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return hexMD5(string)\n      }\n      return rawMD5(string)\n    }\n    if (!raw) {\n      return hexHMACMD5(key, string)\n    }\n    return rawHMACMD5(key, string)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return md5\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = md5\n  } else {\n    $.md5 = md5\n  }\n})(this)\n","import Loader from \"../io/Loader\";\nimport { Header } from \"./Header\";\nimport Token, { getType, Hash, SPLIT_REGEX } from \"./Token\";\nimport md5 from \"blueimp-md5\";\n/**\n * Class for spitting objects into tokens.\n */\nexport default class Tokenizer {\n    loader: Loader = new Loader();\n\n    /**\n     * Load json or text files and turn them into tokens.\n     * \n     * @param files files to load and reduce.\n     */\n    async load(...files: string[]): Promise<Header> {\n        if (files.some(file => typeof file !== \"string\")) {\n            throw new Error(\"Each argument passed to load must be a string.\");\n        }\n        const sortedFiles = files.sort();\n        const allData = await Promise.all(sortedFiles.map(this.loader.load));\n        const header = this.tokenize(Object.fromEntries(allData.map((data, index) => [sortedFiles[index], data])));\n        const textEncoder = new TextEncoder();\n        header.originalDataSize = textEncoder.encode(JSON.stringify(allData)).byteLength;\n        return header;\n    }\n\n    /**\n     * Takes a mapping of filename and their corresponding data, and turn them into tokens.\n     *\n     * @param items Mapping from filename to data.\n     * @returns All data stored as tokens.\n     */\n    tokenize(items: Record<string, any>) {\n        const header: Header = {\n            registry: {},\n            files: {},\n        };\n\n        const counter = { next: 0 };\n\n        Object.entries(items).forEach(([file, value]) => {\n            header.files[file] = {\n                nameToken: this.tokenizeHelper(file, header.registry, counter, \"header\"),\n                token: this.tokenizeHelper(value, header.registry, counter, file),\n            }\n        });\n\n        return header;\n    }\n\n    private registerToken(hash: Hash, value: any, registry: Record<Hash, Token>, counter: {next: number}, file: string, reference?: string[]) {\n        const entry = registry[hash] ?? (registry[hash] = {\n            type: getType(value),\n            hash,\n            value,\n            reference,\n            order: counter.next++,\n            count: 0,\n            files: new Set(),\n        });\n        entry.files.add(file);\n        entry.count++;\n        return entry;\n    }\n\n    private tokenizeHelper(item: any, registry: Record<Hash, Token>, counter: {next: number}, file: string): Token {\n        const type = getType(item);\n        if (type === \"array\") {\n            if (!Array.isArray(item)) {\n                throw new Error(\"item should be an array\");\n            }\n            const hashes = item.map(item => this.tokenizeHelper(item, registry, counter, file)).map(({hash}) => hash);\n            const hash = md5(hashes.join(\",\"));\n            return this.registerToken(hash, item, registry, counter, file, hashes);\n        } else if (type === \"object\") {\n            const entries = Object.entries(item);\n            const keysToken = this.tokenizeHelper(entries.map(([key]) => key), registry, counter, file);\n            const valuesToken = this.tokenizeHelper(entries.map(([,value]) => value), registry, counter, file);\n            const hash = md5(`${keysToken.hash}|${valuesToken.hash}`);\n            return this.registerToken(hash, item, registry, counter, file, [keysToken.hash, valuesToken.hash]);\n        } else if (type === \"split\") {\n            const chunks = item.split(SPLIT_REGEX);\n            const separators = item.match(SPLIT_REGEX);\n            const chunksToken = this.tokenizeHelper(chunks, registry, counter, file);\n            const separatorsToken = this.tokenizeHelper(separators, registry, counter, file);\n            const hash = md5(`${chunksToken.hash}-${separatorsToken.hash}`);\n            return this.registerToken(hash, item, registry, counter, file, [chunksToken.hash, separatorsToken.hash]);\n        } else {\n            const m = md5(JSON.stringify(item));\n            return this.registerToken(m, item, registry, counter, file);\n        }\n    }\n}","import { StructureType } from \"../compression/DataType\";\nimport { DataStore } from \"../reducer/Reducer\";\nimport { ReducedToken, Type } from \"../tokenizer/Token\";\n\n/**\n * Configuration that can be passed.\n * - cacheable: We can use cache to boost extraction speed. This uses a bit more memory.\n * This helps performance and memory, but can lead to weird side effects if the extracted object\n * gets modified.\n */\nexport interface ExtractionConfig {\n    cacheable: boolean;\n}\n\nconst DEFAULT_CONFIG: ExtractionConfig = {\n    cacheable: true,\n}\n\n/**\n * Class storing all data that can be extracted.\n */\nexport default class ExtractableData {\n    readonly extractor: Extractor = new Extractor();\n    readonly dataStore: DataStore;\n    readonly fileToSlot: Record<string, number>;\n    readonly config: ExtractionConfig;\n    readonly fileNames: string[];\n    readonly version?: string;\n    readonly originalDataSize?: number;\n    readonly compressedSize?: number;\n\n    constructor(dataStore: DataStore, config?: ExtractionConfig) {\n        this.dataStore = dataStore;\n        this.config = {\n            ...DEFAULT_CONFIG,\n            ...config,\n        };\n        this.fileNames = this.extractor.extractFileNames(dataStore.files, dataStore.headerTokens, this.config);\n        this.fileToSlot = Object.fromEntries(this.fileNames.map((file, index) => [file, index]));\n        this.version = dataStore.version;\n        this.originalDataSize = dataStore.originalDataSize;\n        this.compressedSize = dataStore.compressedSize;\n    }\n\n    /**\n     * Extract data form a stored file.\n     *\n     * @param filename filename to be extracted.\n     * @returns extracted data.\n     */\n    extract(filename: string) {\n        const slot = this.fileToSlot[filename];\n        const dataTokens = this.dataStore.getDataTokens(slot);\n        if (dataTokens) {\n            return this.extractor.extract(this.dataStore.headerTokens, dataTokens, this.config);\n        }\n    }\n\n    getHeaderTokens() {\n        return this.dataStore.headerTokens;\n    }\n}\n\nclass Extractor {\n    valueFetcher: Record<Type, undefined | ((token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig) => any)>;\n\n    constructor() {\n        this.valueFetcher = {\n            \"array\": this.getArray.bind(this),\n            \"leaf\": this.getLeaf.bind(this),\n            \"object\": this.getObject.bind(this),\n            \"split\": this.getSplit.bind(this),\n            \"reference\": this.getReference.bind(this),\n            \"complex\": undefined,\n        };\n    }\n\n    extractFileNames(files: number[], headerTokens: ReducedToken[], config: ExtractionConfig) {\n        return files.map(index => this.extractToken(index, headerTokens, undefined, config));\n    }\n\n    extract(headerTokens: ReducedToken[], dataTokens: ReducedToken[], config: ExtractionConfig) {\n        const tokenStream = dataTokens.entries();\n        const [,complexToken] = tokenStream.next().value;\n        const structure: StructureType[] = complexToken.value;\n        const token = this.extractComplex(structure.entries(), tokenStream, headerTokens, [...dataTokens], config);\n        return token;\n    }\n\n    private extractComplex(structure: Iterator<[number, StructureType]>, tokenStream: Iterator<[number, ReducedToken]>, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig): any {\n        const [, structureType] = structure.next().value;\n        switch (structureType) {\n            case StructureType.LEAF:\n                const [,leafToken]: [number, ReducedToken] = tokenStream.next().value;\n                const value = this.extractValueOrCache(leafToken, headerTokens, dataTokens, config, true, this.valueFetcher[leafToken.type]);\n                return value;\n            case StructureType.ARRAY:\n                const [,numToken]: [number, ReducedToken] = tokenStream.next().value;\n                const array = new Array(numToken.value).fill(null)\n                    .map(_ => this.extractComplex(structure, tokenStream, headerTokens, dataTokens, config));\n                return array;\n            case StructureType.OBJECT:\n                const keys: string[] = this.extractComplex(structure, tokenStream, headerTokens, dataTokens, config);\n                const values: any[] = this.extractComplex(structure, tokenStream, headerTokens, dataTokens, config);\n                const object = Object.fromEntries(keys.map((key, index) => [key, values[index]]));\n                return object;\n            case StructureType.SPLIT:\n                const chunks: string[] = this.extractComplex(structure, tokenStream, headerTokens, dataTokens, config);\n                const separators: string[] = this.extractComplex(structure, tokenStream, headerTokens, dataTokens, config);\n                const split = chunks.map((chunk, index) => `${chunk}${separators[index] ?? \"\"}`).join(\"\");\n                return split;\n\n        }\n    }\n\n    private extractToken(index: number, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined,\n            config: ExtractionConfig, allowUseCache?: boolean): any {\n        const token = index < headerTokens.length ? headerTokens[index] : dataTokens?.[index - headerTokens.length];\n        if (!token) {\n            throw new Error(\"Invalid token at index: \" + index);            \n        }\n        return this.extractValueOrCache(\n                token,\n                headerTokens,\n                dataTokens,\n                config,\n                allowUseCache,\n                this.valueFetcher[token.type]\n            );\n    }\n\n    private getLeaf(token: ReducedToken) {\n        return token.value;\n    }\n\n    private getReference(token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig): any {\n        const index = token.value;\n        return this.extractToken(index, headerTokens, dataTokens, config);\n    }\n\n    private getArray(token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig): any[] {\n        if (!Array.isArray(token.value)) {\n            throw new Error(\"Invalid array token\");\n        }\n        return token.value.map(index => this.extractToken(index, headerTokens, dataTokens, config));\n    }\n\n    private getObject(token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig): object {\n        const [keyIndex, valueIndex] = token.value;\n        const keys: string[] = this.extractToken(keyIndex, headerTokens, dataTokens, config, true);\n        const values = this.extractToken(valueIndex, headerTokens, dataTokens, config);\n        return Object.fromEntries(keys.map((key, index) => [key, values[index]]));\n    }\n\n    private getSplit(token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig): string {\n        const [chunksIndex, separatorsIndex] = token.value;\n        const chunks: string[] = this.extractToken(chunksIndex, headerTokens, dataTokens, config, true);\n        const separators: string[] = this.extractToken(separatorsIndex, headerTokens, dataTokens, config, true);\n        return chunks.map((chunk, index) => `${chunk}${separators[index] ?? \"\"}`).join(\"\");\n    }\n\n    private extractValueOrCache<T>(\n        token: ReducedToken,\n        headerTokens: ReducedToken[],\n        dataTokens: ReducedToken[] | undefined,\n        config: ExtractionConfig,\n        allowUseCache?: boolean,\n        getValue?: (token: ReducedToken, headerTokens: ReducedToken[], dataTokens: ReducedToken[] | undefined, config: ExtractionConfig) => T): T {\n        \n        if (token.cache !== undefined && allowUseCache) {\n            return token.cache;\n        }\n\n        const value = getValue!(token, headerTokens, dataTokens, config);\n        if (config.cacheable && token.type !== \"leaf\") {\n            token.cache = value;\n        }\n        return value;\n    }\n}","import Reducer, { DataStore } from \"../reducer/Reducer\";\nimport sdv from \"stream-data-view\";\nimport Encoder from \"./Encoder\";\nimport TokenEncoder from \"./TokenEncoder\";\nimport FFlateEncoder from \"./FFlateEncoder\";\nimport {version} from '../../package.json';\nimport Tokenizer from \"../tokenizer/Tokenizer\";\nimport ExtractableData, { ExtractionConfig } from \"../expander/Extractor\";\n\nenum EncoderEnum {\n    NONE = 0,\n    FFLATE = 1,\n};\n\nconst ENCODERS: (() => Encoder | undefined)[] = [\n    () => undefined,\n    () => new FFlateEncoder(),\n]\n\nconst DEFAULT: EncoderEnum[] = [EncoderEnum.FFLATE];\n\nexport default class Compressor {\n    private applyEncoders(buffer: ArrayBuffer, encoders: Encoder[]): ArrayBuffer {\n        let resultBuffer = buffer;\n        encoders.forEach(encoder => {\n            resultBuffer = encoder.encode(resultBuffer);\n        });\n        return resultBuffer;\n    }\n\n    private applyDecoders(buffer: ArrayBuffer, decoders: Encoder[]): ArrayBuffer {\n        let resultBuffer = buffer;\n        decoders.forEach(decoder => {\n            resultBuffer = decoder.decode(resultBuffer);\n        });\n        return resultBuffer;\n    }\n\n    /**\n     * Load json or text files and compress them into one big blob.\n     * This uses the default encoders.\n     * \n     * @param files files to load.\n     */\n    async loadAndCompress(files: string[]): Promise<ArrayBuffer> {\n        const tokenizer = new Tokenizer();\n        const header = await tokenizer.load(...files);\n\n        const reducer = new Reducer();\n        const dataStore = reducer.reduce(header);\n        return this.compressDataStore(dataStore);\n    }\n\n    /**\n     * Compress data into one big blob.\n     * This uses the default encoders.\n     * \n     * @param files files to load.\n     */\n    compress(data: Record<string, any>): ArrayBuffer {\n        const tokenizer = new Tokenizer();\n        const header = tokenizer.tokenize(data);\n\n        const reducer = new Reducer();\n        const dataStore = reducer.reduce(header);\n        return this.compressDataStore(dataStore);\n    }\n    \n    async loadAndExpand(file: string): Promise<ExtractableData> {\n        const response = await fetch(file);\n        const arrayBuffer = await response.arrayBuffer();\n        return this.expand(arrayBuffer);\n    }\n\n    expand(arrayBuffer: ArrayBuffer, config?: ExtractionConfig): ExtractableData {\n        return new ExtractableData(this.expandDataStore(arrayBuffer), config);\n    }\n\n    compressDataStore(dataStore: DataStore, encoderEnums: EncoderEnum[] = DEFAULT): ArrayBuffer {\n        const streamDataView = new sdv.StreamDataView();\n        const tokenEncoder: TokenEncoder = new TokenEncoder(streamDataView);\n\n        //  Write header tokens\n        tokenEncoder.encodeTokens(dataStore.headerTokens, true);\n        //  Write fileNames\n        tokenEncoder.encodeNumberArray(dataStore.files);\n\n        const finalStream = new sdv.StreamDataView();\n        //  Write version\n        finalStream.setNextUint8(version.length);\n        finalStream.setNextString(version);\n\n        //  Write encoders\n        encoderEnums.forEach(encoderEnum => finalStream.setNextUint8(encoderEnum));\n        finalStream.setNextUint8(0);\n\n        const encoders: Encoder[] = encoderEnums\n            .map(encoderEnum => ENCODERS[encoderEnum]())\n            .filter((encoder): encoder is Encoder => !!encoder);\n\n        //  Write header\n        const headerBuffer = this.applyEncoders(streamDataView.getBuffer(), encoders);\n        finalStream.setNextUint32(headerBuffer.byteLength);\n        finalStream.setNextBytes(headerBuffer);\n        console.log(\"HEADER length\", headerBuffer.byteLength);\n\n        //  Write each file's data tokens.\n        for (let index = 0; index < dataStore.files.length; index++) {\n            const subStream = new sdv.StreamDataView();\n            const subEncoder = new TokenEncoder(subStream);\n            subEncoder.encodeTokens(dataStore.getDataTokens(index)!, false);\n\n            //  save and compress buffer\n            const subBuffer = this.applyEncoders(subStream.getBuffer(), encoders);\n            finalStream.setNextUint32(subBuffer.byteLength);\n            console.log(\"SUBBUFFER length\", index, subBuffer.byteLength);\n            finalStream.setNextBytes(subBuffer);\n        }\n        finalStream.setNextUint32(0);\n\n        //  Write original data size\n        finalStream.setNextUint32(dataStore.originalDataSize ?? 0);\n\n        return finalStream.getBuffer();\n    }\n\n    expandDataStore(arrayBuffer: ArrayBuffer): DataStore {\n        const compressedSize = arrayBuffer.byteLength;\n        let input = arrayBuffer;\n        const globalStream = new sdv.StreamDataView(input);\n        const version = globalStream.getNextString(globalStream.getNextUint8());\n        const decoders: Encoder[] = [];\n        do {\n            const encoderEnum = globalStream.getNextUint8();\n            if (encoderEnum === EncoderEnum.NONE) {\n                break;\n            }\n            const decoder = ENCODERS[encoderEnum]();\n            if (decoder) {\n                decoders.push(decoder);\n            }\n        } while(globalStream.getOffset() < globalStream.getLength());\n\n        const headerByteLength = globalStream.getNextUint32();\n        const headerBuffer = this.applyDecoders(globalStream.getNextBytes(headerByteLength).buffer, decoders);\n\n        const headerTokenEncoder = new TokenEncoder(new sdv.StreamDataView(headerBuffer));\n        const headerTokens = headerTokenEncoder.decodeTokens(true);\n        const files = headerTokenEncoder.decodeNumberArray();\n\n        const subBuffers: ArrayBuffer[] = [];\n        do {\n            const byteLength = globalStream.getNextUint32();\n            if (!byteLength) {\n                break;\n            }\n            subBuffers.push(globalStream.getNextBytes(byteLength).buffer);\n        } while(globalStream.getOffset() < globalStream.getLength())\n\n        const getDataTokens = (index: number) => {\n            const subBuffer = this.applyDecoders(subBuffers[index], decoders);\n            const streamDataView = new sdv.StreamDataView(subBuffer);\n            const tokenDecoder = new TokenEncoder(streamDataView);\n            return tokenDecoder.decodeTokens(false);\n        }\n\n        //  The remaining from streamDataView is extra. Some compressed data don't have it.\n        let originalDataSize;\n        try {\n            originalDataSize = globalStream.getNextUint32() || undefined;\n        } catch (e) {\n        }\n\n        return {\n            version,\n            originalDataSize,\n            compressedSize,\n            headerTokens,\n            files,\n            getDataTokens,\n        }\n    }\n}\n","import Loader from \"./io/Loader\";\nimport Compressor from \"./compression/Compressor\";\nimport TokenEncoder from \"./compression/TokenEncoder\";\n\nexport default {\n  Loader,\n  Compressor,\n  TokenEncoder,\n};"],"names":["yaml","require","extension","file","split","pop","Loader","_proto","prototype","load","fetch","then","response","_exit","_temp2","_result","Promise","resolve","json","text","_temp","_load","_response$text","_yaml$load","call","e","reject","StructureType","DataType","NUMBER_DATA_TYPES","UINT8","INT8","UINT16","INT16","UINT32","INT32","FLOAT32","FLOAT64","DataTypeUtils","numberSatisfyDataType","value","dataType","hasDecimal","Math","fround","getBestType","array","some","number","every","_this","min","apply","max","_i","_NUMBER_DATA_TYPES","length","getNumberDataType","_i2","_NUMBER_DATA_TYPES2","type","UNDEFINED","getStringDataType","letterCodes","map","l","charCodeAt","code","STRING","UNICODE","getFullTokenDataType","token","ARRAY_8","OBJECT_8","SPLIT_8","getDataType","COMPLEX_OBJECT","indices","console","assert","EMPTY_ARRAY","offset","bestType","OBJECT_16","OBJECT_32","SPLIT_16","SPLIT_32","OFFSET_ARRAY_8","OFFSET_ARRAY_16","OFFSET_ARRAY_32","ARRAY_16","ARRAY_32","undefined","NULL","BOOLEAN_TRUE","BOOLEAN_FALSE","REFERENCE_8","REFERENCE_16","REFERENCE_32","Error","dataTypeToType","typeToStructureType","LEAF","ARRAY","OBJECT","SPLIT","Reducer","dataTypeUtils","reduce","header","hashToIndex","headerTokens","createReducedHeaderTokens","filterSplit","Object","values","registry","filter","files","size","has","fileEntries","entries","sort","_ref","_ref2","name1","name2","localeCompare","_ref3","nameToken","hash","dataTokens","_ref4","root","subHashToIndex","_extends","structure","result","createComplexObject","originalDataSize","getDataTokens","index","sortTokens","tokens","t1","t2","count","organizeTokens","buckets","forEach","_this2","bucket","_buckets","b","push","a","resultTokens","_iterator","_createForOfIteratorHelperLoose","_step","done","_token$reference","reference","chunskHash","separatorsHash","chunksToken","separatorsToken","deleted","_ref5","organizedTokens","_ref6","_token$reference$map","_token$reference2","resultDataTokens","_token$reference4","_token$reference3","subTokens","_this3","this","MAX_ARRAY_SIZE","TokenEncoder","streamDataView","encodeTokens","organized","pos","encodeMulti","decodeTokens","getOffset","getLength","decodeMulti","encodeToken","multiInfo","usedDataType","encodeDataType","encodeSingleNumber","encodeString","encodeObjectToken","encodeSplitToken","encodeArrayToken","encodeReferenceToken","encodeComplexToken","decodeToken","decodeDataType","UINT2","UINT4","decodeSingleNumber","decodeString","decodeObjectToken","decodeSplitToken","decodeArrayToken","decodeReferenceToken","decodeComplexToken","isOffsetDataType","arrayToken","numberType","encodeNumberArray","decodeNumberArray","objectToken","_objectToken$value","keysIndex","valuesIndex","splitToken","_splitToken$value","chunksIndex","separatorsIndex","setNextUint8","getNextUint8","firstType","multiCount","maxCount","i","setNextInt8","setNextUint16","setNextInt16","setNextUint32","setNextInt32","setNextFloat32","setNextFloat64","getNextInt8","getNextUint16","getNextInt16","getNextUint32","getNextInt32","getNextFloat32","getNextFloat64","bit2ToNum","c","d","numToBit2","n","slice","bit4ToNum","numToBit4","stride","transform","bytes","byte","sizeDiff","numbers","lastStringLength","charCodes","string","String","fromCharCode","join","selfTest","testers","tokenEncoder","tokenDecoder","reset","testAction","Array","fill","_","o","parseInt","tester","sdv","StreamDataView","encoder","decoder","resetOffset","info","encode","decode","check","JSON","stringify","decoded","FFlateEncoder","arrayBuffer","fflate","Uint8Array","buffer","SPLIT_REGEX","TEST_REGEX","getType","isArray","Set","test","Tokenizer","_len","arguments","_key","sortedFiles","all","loader","allData","tokenize","fromEntries","data","textEncoder","TextEncoder","byteLength","items","counter","next","tokenizeHelper","registerToken","entry","_registry$hash","order","add","item","hashes","md5","keysToken","key","valuesToken","chunks","separators","match","m","DEFAULT_CONFIG","cacheable","ExtractableData","dataStore","config","Extractor","fileNames","extractor","extractFileNames","fileToSlot","version","compressedSize","extract","filename","slot","getHeaderTokens","valueFetcher","getArray","bind","getLeaf","getObject","getSplit","getReference","_proto2","extractToken","tokenStream","_tokenStream$next$val","complexToken","extractComplex","concat","_structure$next$value","structureType","_tokenStream$next$val2","leafToken","extractValueOrCache","_tokenStream$next$val3","numToken","keys","object","chunk","_separators$index","allowUseCache","_token$value","keyIndex","valueIndex","_token$value2","_separators$index2","getValue","cache","EncoderEnum","ENCODERS","DEFAULT","FFLATE","Compressor","applyEncoders","encoders","resultBuffer","applyDecoders","decoders","loadAndCompress","tokenizer","reducer","compressDataStore","compress","loadAndExpand","expand","expandDataStore","encoderEnums","finalStream","setNextString","encoderEnum","headerBuffer","getBuffer","setNextBytes","log","subStream","subEncoder","subBuffer","_dataStore$originalDa","input","globalStream","getNextString","NONE","headerByteLength","getNextBytes","headerTokenEncoder","subBuffers"],"mappings":"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"}